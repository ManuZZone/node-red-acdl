[
    {
        "id": "a89c2355683ddc0e",
        "type": "tab",
        "label": "Flow 1",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "f1383130d70a9e86",
        "type": "tab",
        "label": "Flow 3",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "125a7426.3ccc94",
        "type": "tab",
        "label": "Light (point) - example",
        "disabled": false,
        "info": ""
    },
    {
        "id": "4eca63dd5393c219",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "02c0370aeb14a3e2",
        "type": "tab",
        "label": "Monitor (example)",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6b56282a57b97b1f",
        "type": "tab",
        "label": "Sezioni",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "39953be86e6a5e59",
        "type": "tab",
        "label": "Componenti",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "1c23086ee80c3ea8",
        "type": "group",
        "z": "125a7426.3ccc94",
        "name": "Simple light - ON / OFF / Dim",
        "style": {
            "label": true,
            "fill": "#ffffbf",
            "stroke-opacity": "0.6",
            "fill-opacity": "0.6",
            "color": "#3f3f3f"
        },
        "nodes": [
            "cbb9c48b.d8aa98",
            "cdd52f6fcc5ae34c",
            "4535d7f01ba70b90",
            "c69ec9937877eeee"
        ],
        "x": 24,
        "y": 7
    },
    {
        "id": "9ea4cb7eb4cd4687",
        "type": "group",
        "z": "02c0370aeb14a3e2",
        "name": "Monitor SCS Bus",
        "style": {
            "label": true,
            "fill": "#ffffbf",
            "stroke-opacity": "0.6",
            "fill-opacity": "0.6",
            "color": "#3f3f3f"
        },
        "nodes": [
            "92e3d6bad5b53828",
            "0c7913bbd7835b4a",
            "ae6c3f85b89e5cfe",
            "93bbe02dbbc26a89",
            "22bd823422330500"
        ],
        "x": 24,
        "y": 23
    },
    {
        "id": "4535d7f01ba70b90",
        "type": "group",
        "z": "125a7426.3ccc94",
        "g": "1c23086ee80c3ea8",
        "name": "Monitor changes made on a single light point",
        "style": {
            "stroke-opacity": "0.6",
            "label": true,
            "fill": "#d1d1d1",
            "fill-opacity": "0.6",
            "color": "#6A7E64"
        },
        "nodes": [
            "616748750a2d01c6",
            "c8fc9d6d3cc04009",
            "6d489150.4f01d8"
        ],
        "x": 714,
        "y": 219
    },
    {
        "id": "c69ec9937877eeee",
        "type": "group",
        "z": "125a7426.3ccc94",
        "g": "1c23086ee80c3ea8",
        "name": "Send a request for a single light point",
        "style": {
            "stroke-opacity": "0.6",
            "fill": "#d1d1d1",
            "fill-opacity": "0.6",
            "label": true,
            "color": "#7E909D"
        },
        "nodes": [
            "e7e754e768277b3c",
            "e1b77b8f65ae0770",
            "66a84f3e4d7aed65",
            "ecae4965a980c9fa",
            "52bf649eb62a6b65",
            "d8d81f004a3ef575",
            "6db6c82d04d321d0",
            "e968bdf13ecd7bf9",
            "b56ff635cd10d7f8",
            "e5ac70457cdc35b8",
            "d4cf4422fd9f8a13"
        ],
        "x": 64,
        "y": 219
    },
    {
        "id": "a4e23617.d0c288",
        "type": "myhome-gateway",
        "name": "F-455",
        "host": "10.10.50.251",
        "port": "20000",
        "pass": "12345",
        "timeout": "600",
        "lights_onconnect_refreshloads": true,
        "log_in_lights": false,
        "log_in_shutters": false,
        "log_in_temperature": false,
        "log_in_scenario": false,
        "log_in_energy": false,
        "log_in_others": false,
        "log_out_cmd": false
    },
    {
        "id": "d2acfa1254f7b31d",
        "type": "users_config",
        "appPath": "/users",
        "jwtCookieName": "nr.nodeUsers.jwt",
        "jwtHttpsOnly": false
    },
    {
        "id": "fd393d2661e67a50",
        "type": "mongodb",
        "hostname": "localhost",
        "topology": "direct",
        "connectOptions": "",
        "port": "27017",
        "db": "metacontrol",
        "name": ""
    },
    {
        "id": "e5d73fc7dc82fd24",
        "type": "http in",
        "z": "a89c2355683ddc0e",
        "name": "Prova",
        "url": "/test",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 220,
        "wires": [
            [
                "570f2c39d733463d"
            ]
        ]
    },
    {
        "id": "3e546914c3abc8dc",
        "type": "http response",
        "z": "a89c2355683ddc0e",
        "name": "qwe",
        "statusCode": "200",
        "headers": {},
        "x": 790,
        "y": 220,
        "wires": []
    },
    {
        "id": "0e92e2ca95116e0e",
        "type": "template",
        "z": "a89c2355683ddc0e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 640,
        "y": 220,
        "wires": [
            [
                "3e546914c3abc8dc"
            ]
        ]
    },
    {
        "id": "2c04e6411bd9f074",
        "type": "file in",
        "z": "a89c2355683ddc0e",
        "name": "",
        "filename": "luci",
        "filenameType": "str",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "allProps": true,
        "x": 490,
        "y": 220,
        "wires": [
            [
                "0e92e2ca95116e0e"
            ]
        ]
    },
    {
        "id": "570f2c39d733463d",
        "type": "users_isloggedin",
        "z": "a89c2355683ddc0e",
        "name": "",
        "enableCustomHandler": true,
        "outputs": 2,
        "x": 330,
        "y": 220,
        "wires": [
            [
                "2c04e6411bd9f074"
            ],
            [
                "c00f3e292fdfd45f"
            ]
        ]
    },
    {
        "id": "c00f3e292fdfd45f",
        "type": "template",
        "z": "a89c2355683ddc0e",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "Non sei autorizzato",
        "output": "str",
        "x": 640,
        "y": 360,
        "wires": [
            [
                "3e546914c3abc8dc"
            ]
        ]
    },
    {
        "id": "cbb9c48b.d8aa98",
        "type": "myhome-light",
        "z": "125a7426.3ccc94",
        "g": "1c23086ee80c3ea8",
        "name": "Light (A=1 / PL=5)",
        "buslevel": "private_riser",
        "lightid": "82",
        "isgroup": false,
        "topic": "light",
        "gateway": "a4e23617.d0c288",
        "smartfilter": true,
        "smartfilter_out": true,
        "skipevents": false,
        "isstatusrequest": false,
        "output2_name": "",
        "output2_type": "boolean",
        "x": 570,
        "y": 380,
        "wires": [
            [
                "6d489150.4f01d8"
            ],
            [
                "616748750a2d01c6"
            ]
        ]
    },
    {
        "id": "6d489150.4f01d8",
        "type": "debug",
        "z": "125a7426.3ccc94",
        "g": "4535d7f01ba70b90",
        "name": "Full message output",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 840,
        "y": 260,
        "wires": []
    },
    {
        "id": "cdd52f6fcc5ae34c",
        "type": "comment",
        "z": "125a7426.3ccc94",
        "g": "1c23086ee80c3ea8",
        "name": "!! Before you begin, do not forget to configure your gateway (open 'light' node config and select + edit the 'gateway' defined to set the IP and password) \\n \\n Within the 'light' node, you have to set its number (A=1 PL=5 becomes 15, when A>9 or PL>9, the format is 4 digits; e.g. A=11 PL=5 becomes 1105, A=1 PL=15 becomes 0115) \\n - To turn lamp on or off, simply send True/False as payload \\n - To dim it, send the percentage (20 - 100%) as payload \\n \\n Do NOT forget you also have to include a .topic which is 'cmd/<<light_node_topic>>' to allow state change",
        "info": "",
        "x": 620,
        "y": 120,
        "wires": []
    },
    {
        "id": "e7e754e768277b3c",
        "type": "inject",
        "z": "125a7426.3ccc94",
        "g": "c69ec9937877eeee",
        "name": "Turn on",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmd/light",
        "payload": "true",
        "payloadType": "bool",
        "x": 350,
        "y": 260,
        "wires": [
            [
                "cbb9c48b.d8aa98"
            ]
        ],
        "icon": "font-awesome/fa-toggle-on"
    },
    {
        "id": "e1b77b8f65ae0770",
        "type": "inject",
        "z": "125a7426.3ccc94",
        "g": "c69ec9937877eeee",
        "name": "Turn off",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmd/light",
        "payload": "false",
        "payloadType": "bool",
        "x": 350,
        "y": 300,
        "wires": [
            [
                "cbb9c48b.d8aa98"
            ]
        ],
        "icon": "font-awesome/fa-toggle-off"
    },
    {
        "id": "616748750a2d01c6",
        "type": "debug",
        "z": "125a7426.3ccc94",
        "g": "4535d7f01ba70b90",
        "name": "Simplified output (payload=true / false)",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 500,
        "wires": []
    },
    {
        "id": "66a84f3e4d7aed65",
        "type": "inject",
        "z": "125a7426.3ccc94",
        "g": "c69ec9937877eeee",
        "name": "Dim to 20%",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmd/light",
        "payload": "20",
        "payloadType": "num",
        "x": 330,
        "y": 400,
        "wires": [
            [
                "cbb9c48b.d8aa98"
            ]
        ],
        "icon": "font-awesome/fa-star-half-empty"
    },
    {
        "id": "ecae4965a980c9fa",
        "type": "inject",
        "z": "125a7426.3ccc94",
        "g": "c69ec9937877eeee",
        "name": "Dim to 100%",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmd/light",
        "payload": "100",
        "payloadType": "num",
        "x": 330,
        "y": 440,
        "wires": [
            [
                "cbb9c48b.d8aa98"
            ]
        ],
        "icon": "font-awesome/fa-star"
    },
    {
        "id": "52bf649eb62a6b65",
        "type": "inject",
        "z": "125a7426.3ccc94",
        "g": "c69ec9937877eeee",
        "name": "Advanced mode : msg (ON @50%)",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmd/light",
        "payload": "{\"state\":\"ON\",\"brightness\":50}",
        "payloadType": "json",
        "x": 260,
        "y": 760,
        "wires": [
            [
                "cbb9c48b.d8aa98"
            ]
        ],
        "icon": "node-red/parser-json.svg"
    },
    {
        "id": "d8d81f004a3ef575",
        "type": "inject",
        "z": "125a7426.3ccc94",
        "g": "c69ec9937877eeee",
        "name": "Ask for current state",
        "props": [
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "state/light",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "cbb9c48b.d8aa98"
            ]
        ],
        "icon": "font-awesome/fa-question-circle-o"
    },
    {
        "id": "6db6c82d04d321d0",
        "type": "comment",
        "z": "125a7426.3ccc94",
        "g": "c69ec9937877eeee",
        "name": "To ask for light current state, simply set \\n a Topic 'state/<<light_node_topic>>' ",
        "info": "",
        "x": 250,
        "y": 600,
        "wires": []
    },
    {
        "id": "e968bdf13ecd7bf9",
        "type": "comment",
        "z": "125a7426.3ccc94",
        "g": "c69ec9937877eeee",
        "name": "Build your own advanced msg if needed",
        "info": "",
        "x": 240,
        "y": 720,
        "wires": []
    },
    {
        "id": "c8fc9d6d3cc04009",
        "type": "comment",
        "z": "125a7426.3ccc94",
        "g": "4535d7f01ba70b90",
        "name": "Simplified output can be configured in node based on \\n what you need in your flow later on. This avoids having \\n to insert additional 'function' or 'switch' nodes. \\n See node config for more info",
        "info": "",
        "x": 940,
        "y": 420,
        "wires": []
    },
    {
        "id": "b56ff635cd10d7f8",
        "type": "inject",
        "z": "125a7426.3ccc94",
        "g": "c69ec9937877eeee",
        "name": "Dim up",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmd/light",
        "payload": "UP",
        "payloadType": "str",
        "x": 350,
        "y": 480,
        "wires": [
            [
                "cbb9c48b.d8aa98"
            ]
        ],
        "icon": "font-awesome/fa-angle-double-up"
    },
    {
        "id": "e5ac70457cdc35b8",
        "type": "inject",
        "z": "125a7426.3ccc94",
        "g": "c69ec9937877eeee",
        "name": "Dim down",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmd/light",
        "payload": "DOWN",
        "payloadType": "str",
        "x": 340,
        "y": 520,
        "wires": [
            [
                "cbb9c48b.d8aa98"
            ]
        ],
        "icon": "font-awesome/fa-angle-double-down"
    },
    {
        "id": "d4cf4422fd9f8a13",
        "type": "inject",
        "z": "125a7426.3ccc94",
        "g": "c69ec9937877eeee",
        "name": "Toggle",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "cmd/light",
        "payload": "TOGGLE",
        "payloadType": "str",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "cbb9c48b.d8aa98"
            ]
        ],
        "icon": "font-awesome/fa-exchange"
    },
    {
        "id": "92e3d6bad5b53828",
        "type": "comment",
        "z": "02c0370aeb14a3e2",
        "g": "9ea4cb7eb4cd4687",
        "name": "!! Before you begin, do not forget to configure your gateway (open 'Monitor lights/shutters' node config and select + edit the 'gateway' defined to set the IP and password) \\n \\n The 'Monitor lights/shutters' node is configured to only track SCS commands which are about lights. \\n When you turn on the light (physically I mean :-) ) you want to find the MyHome light/shutter number, \\n the debug window will display the message generated on the SCS bus. You can then use it to discover the MyHome light number : \\n - for lights, the message will be as *1*1*xx## when on or *1*0*xx## when off, where xx is the number (A/PL) you need \\n - for shutters, the message will be as *2*??*xx## where xx is the number (A/PL) you need \\n \\n You can also use this node to monitor anything passing on the SCS bus.",
        "info": "",
        "x": 600,
        "y": 160,
        "wires": []
    },
    {
        "id": "22bd823422330500",
        "type": "myhome-eventsession",
        "z": "02c0370aeb14a3e2",
        "g": "9ea4cb7eb4cd4687",
        "name": "Monitor lights",
        "gateway": "a4e23617.d0c288",
        "own_lights": true,
        "own_shutters": false,
        "own_temperature": false,
        "own_scenario": false,
        "own_energy": false,
        "own_others": false,
        "x": 130,
        "y": 320,
        "wires": [
            [
                "ae6c3f85b89e5cfe"
            ]
        ]
    },
    {
        "id": "0c7913bbd7835b4a",
        "type": "myhome-eventsession",
        "z": "02c0370aeb14a3e2",
        "g": "9ea4cb7eb4cd4687",
        "name": "Monitor shutters",
        "gateway": "a4e23617.d0c288",
        "own_lights": false,
        "own_shutters": true,
        "own_temperature": false,
        "own_scenario": false,
        "own_energy": false,
        "own_others": false,
        "x": 140,
        "y": 400,
        "wires": [
            [
                "93bbe02dbbc26a89"
            ]
        ]
    },
    {
        "id": "ae6c3f85b89e5cfe",
        "type": "debug",
        "z": "02c0370aeb14a3e2",
        "g": "9ea4cb7eb4cd4687",
        "name": "Full message output (on any LIGHT update)",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 470,
        "y": 320,
        "wires": []
    },
    {
        "id": "93bbe02dbbc26a89",
        "type": "debug",
        "z": "02c0370aeb14a3e2",
        "g": "9ea4cb7eb4cd4687",
        "name": "Full message output (on any SHUTTER update)",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 400,
        "wires": []
    },
    {
        "id": "6048214f766f8a08",
        "type": "mongodb in",
        "z": "6b56282a57b97b1f",
        "mongodb": "fd393d2661e67a50",
        "name": "",
        "collection": "sections",
        "operation": "find",
        "x": 570,
        "y": 100,
        "wires": [
            [
                "4ef5e0e425a653ad"
            ]
        ]
    },
    {
        "id": "eda4fc09ea395f6f",
        "type": "http in",
        "z": "6b56282a57b97b1f",
        "name": "Prova",
        "url": "/test1/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 200,
        "wires": [
            [
                "7bf96fd0841ae463"
            ]
        ]
    },
    {
        "id": "8312cc209c109e98",
        "type": "http response",
        "z": "6b56282a57b97b1f",
        "name": "qwe",
        "statusCode": "200",
        "headers": {},
        "x": 1150,
        "y": 100,
        "wires": []
    },
    {
        "id": "cd5bfdf5b49aaa3c",
        "type": "template",
        "z": "6b56282a57b97b1f",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 980,
        "y": 100,
        "wires": [
            [
                "8312cc209c109e98"
            ]
        ]
    },
    {
        "id": "4ef5e0e425a653ad",
        "type": "json",
        "z": "6b56282a57b97b1f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 790,
        "y": 100,
        "wires": [
            [
                "cd5bfdf5b49aaa3c"
            ]
        ]
    },
    {
        "id": "7bf96fd0841ae463",
        "type": "users_isloggedin",
        "z": "6b56282a57b97b1f",
        "name": "",
        "enableCustomHandler": true,
        "outputs": 2,
        "x": 310,
        "y": 200,
        "wires": [
            [
                "6048214f766f8a08"
            ],
            [
                "c0927ac9fed4791e"
            ]
        ]
    },
    {
        "id": "2e2b3ef95473bbca",
        "type": "http response",
        "z": "6b56282a57b97b1f",
        "name": "Utente non autenticato",
        "statusCode": "401",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1480,
        "y": 200,
        "wires": []
    },
    {
        "id": "c0927ac9fed4791e",
        "type": "template",
        "z": "6b56282a57b97b1f",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"message\": \"Utente non autenticato\"\n}",
        "output": "str",
        "x": 1280,
        "y": 200,
        "wires": [
            [
                "2e2b3ef95473bbca"
            ]
        ]
    },
    {
        "id": "b87b28fa9af3b76b",
        "type": "mongodb in",
        "z": "39953be86e6a5e59",
        "mongodb": "fd393d2661e67a50",
        "name": "",
        "collection": "sections",
        "operation": "find",
        "x": 550,
        "y": 440,
        "wires": [
            [
                "b5b1b8eabebd24b5"
            ]
        ]
    },
    {
        "id": "5ae4c5eb34741d6d",
        "type": "http in",
        "z": "39953be86e6a5e59",
        "name": "Prova",
        "url": "/components",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 110,
        "y": 540,
        "wires": [
            [
                "4392191d0826d079"
            ]
        ]
    },
    {
        "id": "abed08959df0bef1",
        "type": "http response",
        "z": "39953be86e6a5e59",
        "name": "qwe",
        "statusCode": "200",
        "headers": {},
        "x": 1130,
        "y": 440,
        "wires": []
    },
    {
        "id": "03c772b6b99a8fb5",
        "type": "template",
        "z": "39953be86e6a5e59",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "This is the payload: {{payload}} !",
        "output": "str",
        "x": 960,
        "y": 440,
        "wires": [
            [
                "abed08959df0bef1"
            ]
        ]
    },
    {
        "id": "b5b1b8eabebd24b5",
        "type": "json",
        "z": "39953be86e6a5e59",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 770,
        "y": 440,
        "wires": [
            [
                "03c772b6b99a8fb5"
            ]
        ]
    },
    {
        "id": "4392191d0826d079",
        "type": "users_isloggedin",
        "z": "39953be86e6a5e59",
        "name": "",
        "enableCustomHandler": true,
        "outputs": 2,
        "x": 290,
        "y": 540,
        "wires": [
            [
                "b87b28fa9af3b76b"
            ],
            [
                "c6d69d2fa8bccaec"
            ]
        ]
    },
    {
        "id": "4f861b657084d8aa",
        "type": "http response",
        "z": "39953be86e6a5e59",
        "name": "Utente non autenticato",
        "statusCode": "401",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1460,
        "y": 540,
        "wires": []
    },
    {
        "id": "c6d69d2fa8bccaec",
        "type": "template",
        "z": "39953be86e6a5e59",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"message\": \"Utente non autenticato\"\n}",
        "output": "str",
        "x": 1260,
        "y": 540,
        "wires": [
            [
                "4f861b657084d8aa"
            ]
        ]
    },
    {
        "id": "4e5a42cf651fd94d",
        "type": "myhome-eventsession",
        "z": "39953be86e6a5e59",
        "name": "Monitor Per Luci",
        "gateway": "a4e23617.d0c288",
        "own_lights": true,
        "own_shutters": false,
        "own_temperature": false,
        "own_scenario": false,
        "own_energy": false,
        "own_others": false,
        "x": 100,
        "y": 220,
        "wires": [
            [
                "146bce598087ce6f"
            ]
        ]
    },
    {
        "id": "c39ac3b57a91701b",
        "type": "debug",
        "z": "39953be86e6a5e59",
        "name": "debug 1",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1460,
        "y": 100,
        "wires": []
    },
    {
        "id": "146bce598087ce6f",
        "type": "function",
        "z": "39953be86e6a5e59",
        "name": "Prepara Trova Luce",
        "func": "\nlet tmp = msg.payload.split(\"*\")\nmsg.payload = {\n    \"bus\": tmp[1],\n    \"state\": tmp[2],\n    \"id\": tmp[3]\n}\n//Impostare per leggere dopo IF\nflow.set('component', msg.payload);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 370,
        "y": 220,
        "wires": [
            [
                "f7b955ad5e765459"
            ]
        ]
    },
    {
        "id": "f7b955ad5e765459",
        "type": "mongodb in",
        "z": "39953be86e6a5e59",
        "mongodb": "fd393d2661e67a50",
        "name": "Trova Luce",
        "collection": "lights",
        "operation": "find",
        "x": 610,
        "y": 220,
        "wires": [
            [
                "b87b54026594e757"
            ]
        ]
    },
    {
        "id": "b87b54026594e757",
        "type": "switch",
        "z": "39953be86e6a5e59",
        "name": "Se Vuoto",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 840,
        "y": 220,
        "wires": [
            [
                "3a4f54d5db610ab8"
            ],
            [
                "0c351ce5610cc653"
            ]
        ]
    },
    {
        "id": "eab240db0e296f06",
        "type": "mongodb out",
        "z": "39953be86e6a5e59",
        "mongodb": "fd393d2661e67a50",
        "name": "",
        "collection": "lights",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "insert",
        "x": 1420,
        "y": 180,
        "wires": []
    },
    {
        "id": "3a4f54d5db610ab8",
        "type": "function",
        "z": "39953be86e6a5e59",
        "name": "function 1",
        "func": "msg.payload = flow.get('component');\nmsg.payload = {\n    ...msg.payload,\n    \"name\": \"<Senza Nome> \" + msg.payload.bus + \" \" + msg.payload.id,\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 100,
        "wires": [
            [
                "c39ac3b57a91701b",
                "eab240db0e296f06"
            ]
        ]
    },
    {
        "id": "e982e8e7c40689b7",
        "type": "debug",
        "z": "39953be86e6a5e59",
        "name": "debug 2",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 380,
        "wires": []
    },
    {
        "id": "0c351ce5610cc653",
        "type": "function",
        "z": "39953be86e6a5e59",
        "name": "function 2",
        "func": "let component = flow.get('component');\nmsg.payload = msg.payload[0];\nmsg.payload = {\n    'query': {\n        _id: msg.payload._id,\n    },\n    'payload': {\n        $set: {\n            \"state\": component.state,\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 320,
        "wires": [
            [
                "e982e8e7c40689b7",
                "166ec522e78ced03"
            ]
        ]
    },
    {
        "id": "166ec522e78ced03",
        "type": "mongodb out",
        "z": "39953be86e6a5e59",
        "mongodb": "fd393d2661e67a50",
        "name": "",
        "collection": "lights",
        "payonly": true,
        "upsert": false,
        "multi": true,
        "operation": "update",
        "x": 1340,
        "y": 260,
        "wires": []
    },
    {
        "id": "97c2c0b96b3adb38",
        "type": "inject",
        "z": "39953be86e6a5e59",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{}",
        "payloadType": "json",
        "x": 90,
        "y": 60,
        "wires": [
            [
                "b9a697a5f5212a27"
            ]
        ]
    },
    {
        "id": "b9a697a5f5212a27",
        "type": "mongodb out",
        "z": "39953be86e6a5e59",
        "mongodb": "fd393d2661e67a50",
        "name": "",
        "collection": "lights",
        "payonly": true,
        "upsert": false,
        "multi": false,
        "operation": "delete",
        "x": 480,
        "y": 60,
        "wires": []
    }
]